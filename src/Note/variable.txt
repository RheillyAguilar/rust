
     Fix the error below with least amount of modification to the code
     let x: i32 = 5;  Uninitialized but used, ERROR !
     let _y: i32;  Uninitialized but also unused, only a Warning !

     assert_eq!(x, 5);

     Fill the blanks in the code to make it compile
     let  mut x: i32 = 1;
     x = x + 2; 
    
     assert_eq!(x, 3);

     let x: i32 = 10;
     let y: i32 = 5;
     {
         println!("The value of x is {} and the value of y is {}", x,y);
     }
     println!("The value of x is {} and the value of y is {}", x,y)

     define_x();

     let x: i32 = 5;
     {
         let x = 12;
         assert_eq!(x, 12);
     }
     assert_eq!(x, 5);

     let x = 42;
     println!("{}", x);  Prints "42".
     let mut x: i32 = 1;
     x = 7;
     let mut x = x; 
     x = x + 3;


     let y: i32 = 4;
     let y = "I can also be bound to text!"; 
     let (mut x, y) = (1, 2);
     x += 2;
     assert_eq!(x, 3);
     assert_eq!(y, 2);


     let (x,y);
     (x, ..) = (3, 4);
     [.., y] = [1, 2];
     assert_eq!([x,y], [3, 2]);

     fn define_x() {
     let x: &str = "Hello";
     println!("{} World", x)
     }